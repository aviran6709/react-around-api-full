{"ast":null,"code":"var _jsxFileName = \"/Users/shalom/Desktop/\\xA0Root project/aerond us /frontend/src/components/Router.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Login from \"./Login.js\";\nimport Register from \"./Register.js\";\nimport ProtectedRoute from \"./ProtectedRoute.js\";\nimport { Routes, Route } from 'react-router-dom';\nimport * as auth from \"../utils/auth\";\nimport { useNavigate } from 'react-router-dom';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Router = () => {\n  _s();\n\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [email, setEmail] = React.useState(\"\");\n  const navigate = useNavigate();\n\n  const handelLogin = email => {\n    setLoggedIn(true);\n    setEmail(email);\n    navigate(\"/\");\n  }; // const handelLogout =()=>{\n  //   setLoggedIn(false)\n  // }\n\n\n  const tokenCheck = () => {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      auth.checkToken(jwt).then(res => {\n        if (res.status === 400) {\n          console.log(\" Token not provided or provided in the wrong format \");\n        }\n\n        if (res.status === 401) {\n          console.log(\"The provided token is invalid\");\n        }\n\n        if (res) {\n          handelLogin();\n          setEmail(res.data.email);\n          navigate(\"/\");\n        }\n      }).catch(err => console.log(err));\n      ;\n    }\n  };\n\n  const handelLoginSubmit = _ref => {\n    let {\n      email,\n      password\n    } = _ref;\n  };\n\n  React.useEffect(() => {\n    tokenCheck();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        isLoggedIn: loggedIn,\n        email: email,\n        component: App\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/signin\",\n      element: /*#__PURE__*/_jsxDEV(Login, {\n        handelLogin: handelLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/signup\",\n      element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Router, \"j3J7h4/NENNkkvaS9ySVSfHKPmY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Router;\nexport default Router;\n\nvar _c;\n\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"sources":["/Users/shalom/Desktop/Â Root project/aerond us /frontend/src/components/Router.js"],"names":["React","Login","Register","ProtectedRoute","Routes","Route","auth","useNavigate","App","Router","loggedIn","setLoggedIn","useState","email","setEmail","navigate","handelLogin","tokenCheck","jwt","localStorage","getItem","checkToken","then","res","status","console","log","data","catch","err","handelLoginSubmit","password","useEffect"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,SAAUC,MAAV,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAO,KAAKC,IAAZ,MAAsB,eAAtB;AACA,SAAUC,WAAV,QAA6B,kBAA7B;AACA,OAAOC,GAAP,MAAiB,OAAjB;;;AACA,MAAMC,MAAM,GAAG,MAAK;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,KAAK,CAACY,QAAN,CAAe,KAAf,CAAhC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,KAAK,CAACY,QAAN,CAAe,EAAf,CAA1B;AACA,QAAMG,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,WAAW,GAAGH,KAAD,IAAS;AAC1BF,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAG,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAE,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GAJD,CALoB,CAUpB;AACA;AACA;;;AACC,QAAME,UAAU,GAAC,MAAI;AACpB,UAAMC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAZ;;AACA,QAAIF,GAAJ,EAAS;AACPZ,MAAAA,IAAI,CAACe,UAAL,CAAgBH,GAAhB,EAAqBI,IAArB,CAA2BC,GAAD,IAAS;AACjC,YAAGA,GAAG,CAACC,MAAJ,KAAe,GAAlB,EAAuB;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAa,sDAAb;AACH;;AACC,YAAGH,GAAG,CAACC,MAAJ,KAAe,GAAlB,EAAuB;AACrBC,UAAAA,OAAO,CAACC,GAAR,CAAa,+BAAb;AACH;;AACC,YAAIH,GAAJ,EAAS;AACPP,UAAAA,WAAW;AACXF,UAAAA,QAAQ,CAACS,GAAG,CAACI,IAAJ,CAASd,KAAV,CAAR;AACAE,UAAAA,QAAQ,CAAC,GAAD,CAAR;AACD;AACF,OAZD,EAYGa,KAZH,CAYSC,GAAG,IAAIJ,OAAO,CAACC,GAAR,CAAYG,GAAZ,CAZhB;AAYkC;AACnC;AAGF,GAnBA;;AAqBD,QAAMC,iBAAiB,GAAE,QAAoB;AAAA,QAAnB;AAACjB,MAAAA,KAAD;AAAOkB,MAAAA;AAAP,KAAmB;AAE5C,GAFD;;AAKA/B,EAAAA,KAAK,CAACgC,SAAN,CAAgB,MAAM;AACpBf,IAAAA,UAAU;AACX,GAFD,EAEG,EAFH;AAMI,sBACA,QAAC,MAAD;AAAA,4BACA,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,OAAO,eAAE,QAAC,cAAD;AAAgB,QAAA,UAAU,EAAEP,QAA5B;AAAsC,QAAA,KAAK,EAAEG,KAA7C;AAAoD,QAAA,SAAS,EAAEL;AAA/D;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,OAAO,eAAE,QAAC,KAAD;AAAQ,QAAA,WAAW,EAAEQ;AAArB;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,YAFA,eAGE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAUH,CAvDD;;GAAMP,M;UAGWF,W;;;KAHXE,M;AAyDN,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport Login from \"./Login.js\";\r\nimport Register from \"./Register.js\";\r\nimport ProtectedRoute from \"./ProtectedRoute.js\";\r\nimport {  Routes,Route } from 'react-router-dom';\r\nimport * as auth from \"../utils/auth\";\r\nimport {  useNavigate } from 'react-router-dom';\r\nimport App  from './App';\r\nconst Router = () =>{\r\nconst [loggedIn, setLoggedIn] = React.useState(false);\r\nconst [email, setEmail] = React.useState(\"\");\r\nconst navigate = useNavigate();\r\n\r\nconst handelLogin =(email)=>{\r\n  setLoggedIn(true)\r\n  setEmail(email)\r\n  navigate(\"/\");\r\n}\r\n// const handelLogout =()=>{\r\n//   setLoggedIn(false)\r\n// }\r\n const tokenCheck=()=>{\r\n  const jwt = localStorage.getItem('jwt');\r\n  if (jwt) {\r\n    auth.checkToken(jwt).then((res) => {\r\n      if(res.status === 400) {  \r\n        console.log( \" Token not provided or provided in the wrong format \")\r\n    }\r\n      if(res.status === 401) {  \r\n        console.log( \"The provided token is invalid\")\r\n    }\r\n      if (res) {\r\n        handelLogin()\r\n        setEmail(res.data.email)\r\n        navigate(\"/\");\r\n      }\r\n    }).catch(err => console.log(err));;\r\n  }\r\n\r\n\r\n} \r\n\r\nconst handelLoginSubmit =({email,password})=>{\r\n\r\n}\r\n\r\n\r\nReact.useEffect(() => {\r\n  tokenCheck()\r\n}, []);\r\n\r\n\r\n\r\n    return  (\r\n    <Routes>\r\n    <Route exact path=\"/\" element={<ProtectedRoute isLoggedIn={loggedIn} email={email} component={App}/>}/>\r\n    <Route path=\"/signin\" element={<Login  handelLogin={handelLogin}/>}/>\r\n      <Route path=\"/signup\" element={<Register />}/>\r\n  \r\n    </Routes>\r\n\r\n)\r\n\r\n}\r\n\r\nexport default Router\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}