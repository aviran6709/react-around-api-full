{"ast":null,"code":"var _jsxFileName = \"/Users/shalom/Desktop/\\xA0Root project/aerond us /frontend/src/components/Router.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Login from \"./Login.js\";\nimport Register from \"./Register.js\";\nimport ProtectedRoute from \"./ProtectedRoute.js\";\nimport { Routes, Route } from 'react-router-dom';\nimport * as auth from \"../utils/auth\";\nimport { useNavigate } from 'react-router-dom';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Router = () => {\n  _s();\n\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [email, setEmail] = React.useState(\"\");\n  const [token, setToken] = React.useState(\"\");\n  const navigate = useNavigate();\n\n  const handelLogin = email => {\n    setLoggedIn(true);\n    setEmail(email);\n    navigate(\"/\");\n  }; // const handelLogout =()=>{\n  //   setLoggedIn(false)\n  // }\n\n\n  const tokenCheck = () => {\n    const jwt = localStorage.getItem('jwt');\n\n    if (jwt) {\n      auth.checkToken(jwt).then(res => {\n        if (res.status === 400) {\n          console.log(\" Token not provided or provided in the wrong format \");\n        }\n\n        if (res.status === 401) {\n          console.log(\"The provided token is invalid\");\n        }\n\n        if (res) {\n          handelLogin();\n          setEmail(res.data.email);\n          navigate(\"/\");\n        }\n      }).catch(err => console.log(err));\n      ;\n    }\n  };\n\n  const handelLoginSubmit = _ref => {\n    let {\n      email,\n      password\n    } = _ref;\n    auth.login(email, password).then(data => {\n      if (data.token) {\n        localStorage.setItem('jwt', data.token);\n        props.handelLogin(email);\n        setToken(data.token);\n      }\n\n      if (data.status === 400) {\n        console.log(\" one or more of the fields were not provided \");\n      }\n\n      if (data.status === 401) {\n        console.log(\"the user with the specified email not found \");\n      }\n    }).catch(err => console.log(err));\n  };\n\n  React.useEffect(() => {\n    tokenCheck();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        isLoggedIn: loggedIn,\n        email: email,\n        component: App\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/signin\",\n      element: /*#__PURE__*/_jsxDEV(Login, {\n        handelLogin: handelLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 36\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/signup\",\n      element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Router, \"yMp6mRhO+dTVjve+d2jlItDXKiU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Router;\nexport default Router;\n\nvar _c;\n\n$RefreshReg$(_c, \"Router\");","map":{"version":3,"sources":["/Users/shalom/Desktop/Â Root project/aerond us /frontend/src/components/Router.js"],"names":["React","Login","Register","ProtectedRoute","Routes","Route","auth","useNavigate","App","Router","loggedIn","setLoggedIn","useState","email","setEmail","token","setToken","navigate","handelLogin","tokenCheck","jwt","localStorage","getItem","checkToken","then","res","status","console","log","data","catch","err","handelLoginSubmit","password","login","setItem","props","useEffect"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Login from \"./Login.js\";\r\nimport Register from \"./Register.js\";\r\nimport ProtectedRoute from \"./ProtectedRoute.js\";\r\nimport {  Routes,Route } from 'react-router-dom';\r\nimport * as auth from \"../utils/auth\";\r\nimport {  useNavigate } from 'react-router-dom';\r\nimport App  from './App';\r\nconst Router = () =>{\r\nconst [loggedIn, setLoggedIn] = React.useState(false);\r\nconst [email, setEmail] = React.useState(\"\");\r\nconst [token, setToken] = React.useState(\"\");\r\nconst navigate = useNavigate();\r\n\r\nconst handelLogin =(email)=>{\r\n  setLoggedIn(true)\r\n  setEmail(email)\r\n  navigate(\"/\");\r\n}\r\n// const handelLogout =()=>{\r\n//   setLoggedIn(false)\r\n// }\r\n const tokenCheck=()=>{\r\n  const jwt = localStorage.getItem('jwt');\r\n  if (jwt) {\r\n    auth.checkToken(jwt).then((res) => {\r\n      if(res.status === 400) {  \r\n        console.log( \" Token not provided or provided in the wrong format \")\r\n    }\r\n      if(res.status === 401) {  \r\n        console.log( \"The provided token is invalid\")\r\n    }\r\n      if (res) {\r\n        handelLogin()\r\n        setEmail(res.data.email)\r\n        navigate(\"/\");\r\n      }\r\n    }).catch(err => console.log(err));;\r\n  }\r\n\r\n\r\n} \r\n\r\nconst handelLoginSubmit =({email,password})=>{\r\n  auth.login(email, password)\r\n            .then((data) => {\r\n\r\n                if (data.token) {\r\n                    localStorage.setItem('jwt', data.token);\r\n                    props.handelLogin(email)\r\n                    setToken(data.token)\r\n\r\n                }\r\n                if (data.status === 400) {\r\n                    console.log(\" one or more of the fields were not provided \")\r\n                }\r\n                if (data.status === 401) {\r\n                    console.log(\"the user with the specified email not found \")\r\n                }\r\n                \r\n               \r\n            }).catch(err => console.log(err));\r\n\r\n}\r\n\r\n\r\nReact.useEffect(() => {\r\n  tokenCheck()\r\n}, []);\r\n\r\n\r\n\r\n    return  (\r\n    <Routes>\r\n    <Route exact path=\"/\" element={<ProtectedRoute isLoggedIn={loggedIn}  email={email} component={App}/>}/>\r\n    <Route path=\"/signin\" element={<Login  handelLogin={handelLogin}/>}/>\r\n      <Route path=\"/signup\" element={<Register />}/>\r\n  \r\n    </Routes>\r\n\r\n)\r\n\r\n}\r\n\r\nexport default Router\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}