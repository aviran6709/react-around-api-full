{"ast":null,"code":"const customFetch = (url, headers) => {\n  return fetch(url, headers).then(res => {\n    if (res.ok) {\n      return res.json();\n    } else {\n      Promise.reject(res.statusText);\n    }\n  });\n};\n\nclass Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n\n    this.getCard = () => {\n      return customFetch(`${this.baseUrl}/cards`, {\n        headers: this.headers\n      });\n    };\n\n    this.getUserInfo = () => {\n      return customFetch(`${this.baseUrl}/users/me`, {\n        headers: this.headers\n      });\n    };\n\n    this.setUserInfoToServer = inputData => {\n      return customFetch(`${this.baseUrl}/users/me`, {\n        method: \"PATCH\",\n        headers: this.headers,\n        body: JSON.stringify({\n          name: inputData.name,\n          about: inputData.about\n        })\n      });\n    };\n\n    this.cardLikeRequset = cardId => {\n      return customFetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n        method: \"PUT\",\n        headers: this.headers\n      });\n    };\n\n    this.cardUnLikeRequset = cardId => {\n      return customFetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n        method: \"DELETE\",\n        headers: this.headers\n      });\n    };\n\n    this.changeLikeCardStatus = (cardId, isLiked) => {\n      return customFetch(`${this.baseUrl}/cards/likes/${cardId}`, {\n        method: `${isLiked ? \"PUT\" : \"DELETE\"}`,\n        headers: this.headers\n      });\n    };\n\n    this.setUserPicUrl = data => {\n      return customFetch(`${this.baseUrl}/users/me/avatar`, {\n        method: \"PATCH\",\n        headers: this.headers,\n        body: JSON.stringify({\n          avatar: data.avatar\n        })\n      });\n    };\n\n    this.deleteCardRequest = elementId => {\n      return customFetch(`${this.baseUrl}/cards/${elementId}`, {\n        method: \"DELETE\",\n        headers: this.headers\n      });\n    };\n\n    this.updateToken = () => {\n      this.headers = {\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n        \"Content-Type\": \"application/json\"\n      };\n    };\n\n    this.baseUrl = baseUrl;\n    this.headers = headers;\n  } //get arry of cards obj from server\n\n\n  //add card func\n  setCardToServr(data) {\n    return customFetch(`${this.baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this.headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    });\n  } //end of class\n\n\n} //Token: 2dbf8d5b-1a4e-4959-a937-202ce5167a76 Group ID: group-12\n\n\nconst api = new Api({\n  // baseUrl: `https://around.nomoreparties.co/v1/group-12`,\n  baseUrl: `http://api.aroundus.students.nomoreparties.sbs`,\n  //baseUrl: `http://localhost:3000`,\n  headers: {\n    authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n    // authorization:`2dbf8d5b-1a4e-4959-a937-202ce5167a76`,\n    \"Content-Type\": \"application/json\"\n  }\n}); // Bearer ${localStorage.getItem(\"jwt\")}\n\nexport default api;","map":{"version":3,"names":["customFetch","url","headers","fetch","then","res","ok","json","Promise","reject","statusText","Api","constructor","baseUrl","getCard","getUserInfo","setUserInfoToServer","inputData","method","body","JSON","stringify","name","about","cardLikeRequset","cardId","cardUnLikeRequset","changeLikeCardStatus","isLiked","setUserPicUrl","data","avatar","deleteCardRequest","elementId","updateToken","authorization","localStorage","getItem","setCardToServr","link","api"],"sources":["/Users/shalom/Desktop/תיקיה ללא שם 2/frontend/src/utils/api.js"],"sourcesContent":["const customFetch = (url, headers) => {\r\n    return fetch(url, headers).then((res) => {\r\n        if (res.ok) { return res.json(); }\r\n        else { Promise.reject(res.statusText); }\r\n    })\r\n\r\n}\r\n  class Api {\r\n    constructor({ baseUrl, headers }) {\r\n        this.baseUrl = baseUrl;\r\n        this.headers = headers;\r\n\r\n    }\r\n    //get arry of cards obj from server\r\n    getCard = () => {\r\n        return customFetch(`${this.baseUrl}/cards`, { headers: this.headers })\r\n\r\n    };\r\n    //get user info from server\r\n    getUserInfo = () => {\r\n        return customFetch(`${this.baseUrl}/users/me`, { headers: this.headers })\r\n    }\r\n\r\n \r\n    //set user info\r\n    setUserInfoToServer = (inputData) => {\r\n        return customFetch(`${this.baseUrl}/users/me`, {\r\n            method: \"PATCH\",\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: inputData.name,\r\n                about: inputData.about\r\n            })\r\n        })\r\n\r\n    }\r\n\r\n    //card like requset\r\n    cardLikeRequset = (cardId) => {\r\n        return customFetch(`${this.baseUrl}/cards/likes/${cardId}`,\r\n            {\r\n                method: \"PUT\",\r\n                headers: this.headers,\r\n            }\r\n        )\r\n    }\r\n\r\n    //unlike card req from server\r\n    cardUnLikeRequset = (cardId) => {\r\n        return customFetch(`${this.baseUrl}/cards/likes/${cardId}`,\r\n            {\r\n                method: \"DELETE\",\r\n                headers: this.headers,\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    changeLikeCardStatus = (cardId, isLiked) => {\r\n        return customFetch(`${this.baseUrl}/cards/likes/${cardId}`,\r\n            {\r\n                method:`${isLiked ? \"PUT\" : \"DELETE\"}`,\r\n                headers: this.headers,\r\n            }\r\n        )\r\n    }\r\n\r\n\r\n    // requset to chenge profile pic \r\n    setUserPicUrl = (data) => {\r\n        return customFetch(`${this.baseUrl}/users/me/avatar`, {\r\n            method: \"PATCH\",\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                avatar: data.avatar\r\n            })\r\n        })\r\n    }\r\n    //add card func\r\n    setCardToServr(data) {\r\n        return customFetch(`${this.baseUrl}/cards`, {\r\n            method: \"POST\",\r\n            headers: this.headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                link: data.link\r\n            })\r\n        })\r\n    }\r\n\r\n    deleteCardRequest = (elementId) => {\r\n        return customFetch(`${this.baseUrl}/cards/${elementId}`,\r\n            {\r\n                method: \"DELETE\",\r\n                headers: this.headers,\r\n            }\r\n        )\r\n    }\r\nupdateToken = () => {\r\n    this.headers = {\r\n        authorization:`Bearer ${localStorage.getItem(\"jwt\")}`,\r\n        \"Content-Type\": \"application/json\"\r\n    }\r\n}\r\n\r\n\r\n    //end of class\r\n}\r\n\r\n\r\n\r\n//Token: 2dbf8d5b-1a4e-4959-a937-202ce5167a76 Group ID: group-12\r\n\r\n  const api = new Api({\r\n    // baseUrl: `https://around.nomoreparties.co/v1/group-12`,\r\n    baseUrl: `http://api.aroundus.students.nomoreparties.sbs`,\r\n    //baseUrl: `http://localhost:3000`,\r\n    headers: {\r\n        authorization:`Bearer ${localStorage.getItem(\"jwt\")}`,\r\n        // authorization:`2dbf8d5b-1a4e-4959-a937-202ce5167a76`,\r\n        \"Content-Type\": \"application/json\"\r\n    }\r\n});\r\n\r\n// Bearer ${localStorage.getItem(\"jwt\")}\r\nexport default api"],"mappings":"AAAA,MAAMA,WAAW,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;EAClC,OAAOC,KAAK,CAACF,GAAD,EAAMC,OAAN,CAAL,CAAoBE,IAApB,CAA0BC,GAAD,IAAS;IACrC,IAAIA,GAAG,CAACC,EAAR,EAAY;MAAE,OAAOD,GAAG,CAACE,IAAJ,EAAP;IAAoB,CAAlC,MACK;MAAEC,OAAO,CAACC,MAAR,CAAeJ,GAAG,CAACK,UAAnB;IAAiC;EAC3C,CAHM,CAAP;AAKH,CAND;;AAOE,MAAMC,GAAN,CAAU;EACRC,WAAW,OAAuB;IAAA,IAAtB;MAAEC,OAAF;MAAWX;IAAX,CAAsB;;IAAA,KAMlCY,OANkC,GAMxB,MAAM;MACZ,OAAOd,WAAW,CAAE,GAAE,KAAKa,OAAQ,QAAjB,EAA0B;QAAEX,OAAO,EAAE,KAAKA;MAAhB,CAA1B,CAAlB;IAEH,CATiC;;IAAA,KAWlCa,WAXkC,GAWpB,MAAM;MAChB,OAAOf,WAAW,CAAE,GAAE,KAAKa,OAAQ,WAAjB,EAA6B;QAAEX,OAAO,EAAE,KAAKA;MAAhB,CAA7B,CAAlB;IACH,CAbiC;;IAAA,KAiBlCc,mBAjBkC,GAiBXC,SAAD,IAAe;MACjC,OAAOjB,WAAW,CAAE,GAAE,KAAKa,OAAQ,WAAjB,EAA6B;QAC3CK,MAAM,EAAE,OADmC;QAE3ChB,OAAO,EAAE,KAAKA,OAF6B;QAG3CiB,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACjBC,IAAI,EAAEL,SAAS,CAACK,IADC;UAEjBC,KAAK,EAAEN,SAAS,CAACM;QAFA,CAAf;MAHqC,CAA7B,CAAlB;IASH,CA3BiC;;IAAA,KA8BlCC,eA9BkC,GA8BfC,MAAD,IAAY;MAC1B,OAAOzB,WAAW,CAAE,GAAE,KAAKa,OAAQ,gBAAeY,MAAO,EAAvC,EACd;QACIP,MAAM,EAAE,KADZ;QAEIhB,OAAO,EAAE,KAAKA;MAFlB,CADc,CAAlB;IAMH,CArCiC;;IAAA,KAwClCwB,iBAxCkC,GAwCbD,MAAD,IAAY;MAC5B,OAAOzB,WAAW,CAAE,GAAE,KAAKa,OAAQ,gBAAeY,MAAO,EAAvC,EACd;QACIP,MAAM,EAAE,QADZ;QAEIhB,OAAO,EAAE,KAAKA;MAFlB,CADc,CAAlB;IAMH,CA/CiC;;IAAA,KAkDlCyB,oBAlDkC,GAkDX,CAACF,MAAD,EAASG,OAAT,KAAqB;MACxC,OAAO5B,WAAW,CAAE,GAAE,KAAKa,OAAQ,gBAAeY,MAAO,EAAvC,EACd;QACIP,MAAM,EAAE,GAAEU,OAAO,GAAG,KAAH,GAAW,QAAS,EADzC;QAEI1B,OAAO,EAAE,KAAKA;MAFlB,CADc,CAAlB;IAMH,CAzDiC;;IAAA,KA6DlC2B,aA7DkC,GA6DjBC,IAAD,IAAU;MACtB,OAAO9B,WAAW,CAAE,GAAE,KAAKa,OAAQ,kBAAjB,EAAoC;QAClDK,MAAM,EAAE,OAD0C;QAElDhB,OAAO,EAAE,KAAKA,OAFoC;QAGlDiB,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;UACjBU,MAAM,EAAED,IAAI,CAACC;QADI,CAAf;MAH4C,CAApC,CAAlB;IAOH,CArEiC;;IAAA,KAkFlCC,iBAlFkC,GAkFbC,SAAD,IAAe;MAC/B,OAAOjC,WAAW,CAAE,GAAE,KAAKa,OAAQ,UAASoB,SAAU,EAApC,EACd;QACIf,MAAM,EAAE,QADZ;QAEIhB,OAAO,EAAE,KAAKA;MAFlB,CADc,CAAlB;IAMH,CAzFiC;;IAAA,KA0FtCgC,WA1FsC,GA0FxB,MAAM;MAChB,KAAKhC,OAAL,GAAe;QACXiC,aAAa,EAAE,UAASC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAA4B,EADzC;QAEX,gBAAgB;MAFL,CAAf;IAIH,CA/FqC;;IAC9B,KAAKxB,OAAL,GAAeA,OAAf;IACA,KAAKX,OAAL,GAAeA,OAAf;EAEH,CALO,CAMR;;;EAiEA;EACAoC,cAAc,CAACR,IAAD,EAAO;IACjB,OAAO9B,WAAW,CAAE,GAAE,KAAKa,OAAQ,QAAjB,EAA0B;MACxCK,MAAM,EAAE,MADgC;MAExChB,OAAO,EAAE,KAAKA,OAF0B;MAGxCiB,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACjBC,IAAI,EAAEQ,IAAI,CAACR,IADM;QAEjBiB,IAAI,EAAET,IAAI,CAACS;MAFM,CAAf;IAHkC,CAA1B,CAAlB;EAQH,CAjFO,CAmGR;;;AAnGQ,C,CAwGZ;;;AAEE,MAAMC,GAAG,GAAG,IAAI7B,GAAJ,CAAQ;EAClB;EACAE,OAAO,EAAG,gDAFQ;EAGlB;EACAX,OAAO,EAAE;IACLiC,aAAa,EAAE,UAASC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAA4B,EAD/C;IAEL;IACA,gBAAgB;EAHX;AAJS,CAAR,CAAZ,C,CAWF;;AACA,eAAeG,GAAf"},"metadata":{},"sourceType":"module"}