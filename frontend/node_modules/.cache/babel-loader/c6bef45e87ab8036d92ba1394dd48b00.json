{"ast":null,"code":"var _jsxFileName = \"/Users/shalom/Desktop/\\u05EA\\u05D9\\u05E7\\u05D9\\u05D4 \\u05DC\\u05DC\\u05D0 \\u05E9\\u05DD 2/frontend/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport React from \"react\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport api from \"../utils/api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(_ref) {\n  _s();\n\n  let {\n    email\n  } = _ref;\n  const [isOpenEdit, setIsOpenEdit] = React.useState(false);\n  const [isOpenAvatar, setIsOpenAvatar] = React.useState(false);\n  const [isOpenAddcard, setIsOpenAddcard] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  function getCurrentData() {\n    api.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(console.log);\n  }\n\n  function setCurrentData(info) {\n    api.setUserInfoToServer(info).then(res => {\n      closeAllPopups();\n      setCurrentUser(res);\n    }).catch(console.log);\n  }\n\n  function handleUpdateAvatar(info) {\n    api.setUserPicUrl(info).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(console.log);\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCardRequest(card).then(() => {\n      setCards(cards.filter(c => c._id !== card));\n    }).catch(console.log);\n  }\n\n  const handleAddPlaceSubmit = data => {\n    api.setCardToServr(data).then(res => {\n      setCards([res, ...cards]);\n      closeAllPopups();\n    }).catch(console.log);\n  };\n\n  function handleEditAvatarClick() {\n    setIsOpenAvatar(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsOpenEdit(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsOpenAddcard(true);\n  }\n\n  function closeAllPopups() {\n    setIsOpenAddcard(false);\n    setIsOpenEdit(false);\n    setIsOpenAvatar(false);\n    setIsImagePopupOpen(false);\n  }\n\n  const handleCardClick = cardClicked => {\n    setSelectedCard(cardClicked);\n    setIsImagePopupOpen(true);\n  };\n\n  React.useEffect(() => {\n    getCards();\n    getCurrentData();\n  }, []);\n  React.useEffect(() => {\n    const closeByEscape = e => {\n      if (e.key === 'Escape') {\n        closeAllPopups();\n      }\n    };\n\n    document.addEventListener('keydown', closeByEscape);\n    return () => document.removeEventListener('keydown', closeByEscape);\n  }, []);\n\n  function getCards() {\n    api.getCard().then(res => setCards(res)).catch(console.log);\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Send a request to the API and getting the updated card data\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(console.log);\n    ;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n        value: currentUser,\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          email: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Main, {\n          cards: cards,\n          onEditClick: handleEditProfileClick,\n          onEditAvatarClick: handleEditAvatarClick,\n          onAddClick: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          handleCardDelete: handleCardDelete,\n          handleCardLike: handleCardLike\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n          isOpen: isOpenAddcard,\n          onClose: closeAllPopups,\n          onUpdateNewCard: handleAddPlaceSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n          isOpen: isOpenAvatar,\n          onClose: closeAllPopups,\n          onUpdateAvatar: handleUpdateAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n          isOpen: isOpenEdit,\n          onClose: closeAllPopups,\n          onUpdateUser: setCurrentData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n          isOpen: isImagePopupOpen,\n          onClose: closeAllPopups,\n          target: selectedCard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"vZ3VqXEw8QXfNLAKWZsmKwQKR0s=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/shalom/Desktop/תיקיה ללא שם 2/frontend/src/components/App.js"],"names":["Header","Main","Footer","AddPlacePopup","EditProfilePopup","EditAvatarPopup","React","ImagePopup","api","CurrentUserContext","App","email","isOpenEdit","setIsOpenEdit","useState","isOpenAvatar","setIsOpenAvatar","isOpenAddcard","setIsOpenAddcard","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","getCurrentData","getUserInfo","then","res","catch","console","log","setCurrentData","info","setUserInfoToServer","closeAllPopups","handleUpdateAvatar","setUserPicUrl","handleCardDelete","card","deleteCardRequest","filter","c","_id","handleAddPlaceSubmit","data","setCardToServr","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","cardClicked","useEffect","getCards","closeByEscape","e","key","document","addEventListener","removeEventListener","getCard","handleCardLike","isLiked","likes","some","i","changeLikeCardStatus","newCard","state","map"],"mappings":"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","sourcesContent":["import Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport AddPlacePopup from \"./AddPlacePopup.js\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\n\nimport React from \"react\";\nimport ImagePopup from \"./ImagePopup.js\";\nimport api  from \"../utils/api.js\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\n\nfunction App({email}) {\n \n  const [isOpenEdit, setIsOpenEdit] = React.useState(false);\n  const [isOpenAvatar, setIsOpenAvatar] = React.useState(false);\n  const [isOpenAddcard, setIsOpenAddcard] = React.useState(false);\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  function getCurrentData() {\n    api.getUserInfo().then((res) => {\n        setCurrentUser(res);\n    }).catch(console.log);\n  }\n  function setCurrentData(info) {\n    api\n      .setUserInfoToServer(info)\n      .then((res) => {\n        closeAllPopups()\n        setCurrentUser(res);\n      }).catch(console.log)\n  }\n  function handleUpdateAvatar(info) {\n    api\n      .setUserPicUrl(info)\n      .then((res) => {\n        setCurrentUser(res);\n        closeAllPopups()\n      }).catch(console.log)\n  }\n  function handleCardDelete(card) {\n    api.deleteCardRequest(card).then(() => {\n      setCards(cards.filter((c) => c._id !== card));\n    }).catch(console.log);\n  }\n  \n  const handleAddPlaceSubmit = (data) => {\n    api\n      .setCardToServr(data)\n      .then((res) => {\n        setCards([res, ...cards]);\n        closeAllPopups()\n      }).catch(console.log);\n  };\n\n  function handleEditAvatarClick() {\n    setIsOpenAvatar(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsOpenEdit(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsOpenAddcard(true);\n  }\n\n  function closeAllPopups() {\n    setIsOpenAddcard(false);\n    setIsOpenEdit(false);\n    setIsOpenAvatar(false);\n    setIsImagePopupOpen(false);\n  }\n\n  const handleCardClick = (cardClicked) => {\n    setSelectedCard(cardClicked);\n    setIsImagePopupOpen(true);\n  };\n  React.useEffect(() => {\n    getCards();\n    getCurrentData();\n    \n  }, []);\n  \n  React.useEffect(() => {\n    const closeByEscape = (e) => {\n      if (e.key === 'Escape') {\n        closeAllPopups();\n      }\n    }\n    document.addEventListener('keydown', closeByEscape)   \n    return () => document.removeEventListener('keydown', closeByEscape)\n}, [])\n\n\n  function getCards() {\n    api.getCard().then((res) => setCards(res)).catch(console.log);\n  }\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n    // Send a request to the API and getting the updated card data\n    api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n      setCards((state) => state.map((c) => (c._id === card._id ? newCard : c)));\n    }).catch(console.log);;\n  }\n\n  return (\n\n   \n    <div className=\"App\">\n     \n\n    <div className=\"page\">\n        <CurrentUserContext.Provider value={currentUser}>\n          <Header  email={email} />\n          <Main\n            cards={cards}\n            onEditClick={handleEditProfileClick}\n            onEditAvatarClick={handleEditAvatarClick}\n            onAddClick={handleAddPlaceClick}\n            onCardClick={handleCardClick}\n            handleCardDelete={handleCardDelete}\n            handleCardLike={handleCardLike}\n          />\n          <Footer />\n\n          \n            <AddPlacePopup\n              isOpen={isOpenAddcard}\n              onClose={closeAllPopups}\n              onUpdateNewCard={handleAddPlaceSubmit}\n            />\n\n            <EditAvatarPopup\n              isOpen={isOpenAvatar}\n              onClose={closeAllPopups}\n              onUpdateAvatar={handleUpdateAvatar}\n            />\n\n            <EditProfilePopup\n              isOpen={isOpenEdit}\n              onClose={closeAllPopups}\n              onUpdateUser={setCurrentData}\n            />\n            <ImagePopup\n              isOpen={isImagePopupOpen}\n              onClose={closeAllPopups}\n              target={selectedCard}\n            />\n          \n        </CurrentUserContext.Provider></div> \n     \n\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}